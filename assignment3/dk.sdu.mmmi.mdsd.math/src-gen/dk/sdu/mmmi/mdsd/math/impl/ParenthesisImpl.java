/**
 * generated by Xtext 2.25.0
 */
package dk.sdu.mmmi.mdsd.math.impl;

import dk.sdu.mmmi.mdsd.math.Expression;
import dk.sdu.mmmi.mdsd.math.MathPackage;
import dk.sdu.mmmi.mdsd.math.Parenthesis;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Parenthesis</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link dk.sdu.mmmi.mdsd.math.impl.ParenthesisImpl#getExpreesion <em>Expreesion</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ParenthesisImpl extends ExpressionImpl implements Parenthesis
{
  /**
   * The cached value of the '{@link #getExpreesion() <em>Expreesion</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExpreesion()
   * @generated
   * @ordered
   */
  protected Expression expreesion;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ParenthesisImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MathPackage.Literals.PARENTHESIS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Expression getExpreesion()
  {
    return expreesion;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetExpreesion(Expression newExpreesion, NotificationChain msgs)
  {
    Expression oldExpreesion = expreesion;
    expreesion = newExpreesion;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MathPackage.PARENTHESIS__EXPREESION, oldExpreesion, newExpreesion);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setExpreesion(Expression newExpreesion)
  {
    if (newExpreesion != expreesion)
    {
      NotificationChain msgs = null;
      if (expreesion != null)
        msgs = ((InternalEObject)expreesion).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MathPackage.PARENTHESIS__EXPREESION, null, msgs);
      if (newExpreesion != null)
        msgs = ((InternalEObject)newExpreesion).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MathPackage.PARENTHESIS__EXPREESION, null, msgs);
      msgs = basicSetExpreesion(newExpreesion, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MathPackage.PARENTHESIS__EXPREESION, newExpreesion, newExpreesion));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MathPackage.PARENTHESIS__EXPREESION:
        return basicSetExpreesion(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MathPackage.PARENTHESIS__EXPREESION:
        return getExpreesion();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MathPackage.PARENTHESIS__EXPREESION:
        setExpreesion((Expression)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MathPackage.PARENTHESIS__EXPREESION:
        setExpreesion((Expression)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MathPackage.PARENTHESIS__EXPREESION:
        return expreesion != null;
    }
    return super.eIsSet(featureID);
  }

} //ParenthesisImpl
